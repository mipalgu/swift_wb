/** 
 * file SENSORSTorsoJointSensors.swift 
 * 
 * This file was generated by classgenerator from SENSORS_TorsoJointSensors.txt. 
 * DO NOT CHANGE MANUALLY! 
 * 
 * Created by Carl Lusty on 10:34, 19/3/2017 
 * Copyright (c) 2017 Carl Lusty 
 * All rights reserved. 
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 * 
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 * 
 * 2. Redistributions in binary form must reproduce the above 
 *    copyright notice, this list of conditions and the following 
 *    disclaimer in the documentation and/or other materials 
 *    provided with the distribution. 
 * 
 * 3. All advertising materials mentioning features or use of this 
 *    software must display the following acknowledgement: 
 * 
 *    This product includes software developed by Carl Lusty. 
 * 
 * 4. Neither the name of the author nor the names of contributors 
 *    may be used to endorse or promote products derived from this 
 *    software without specific prior written permission. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * ----------------------------------------------------------------------- 
 * This program is free software; you can redistribute it and/or 
 * modify it under the above terms or under the terms of the GNU 
 * General Public License as published by the Free Software Foundation; 
 * either version 2 of the License, or (at your option) any later version. 
 * 
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, see http://www.gnu.org/licenses/ 
 * or write to the Free Software Foundation, Inc., 51 Franklin Street, 
 * Fifth Floor, Boston, MA  02110-1301, USA. 
 */ 

import CGUSimpleWhiteboard

/** 
 * @brief Body joint positions c struct 
 */ 
extension wb_sensors_torsojointsensors { 

    public init () { 
        self.HeadYaw = 0.0 
        self.HeadPitch = 0.0 
        self.LShoulderPitch = 0.0 
        self.LShoulderRoll = 0.0 
        self.LElbowYaw = 0.0 
        self.LElbowRoll = 0.0 
        self.RShoulderPitch = 0.0 
        self.RShoulderRoll = 0.0 
        self.RElbowYaw = 0.0 
        self.RElbowRoll = 0.0 
    }

    public init(fromDictionary dictionary: [String: Any]) {
        self.HeadYaw = dictionary["HeadYaw"] as! Float
        self.HeadPitch = dictionary["HeadPitch"] as! Float
        self.LShoulderPitch = dictionary["LShoulderPitch"] as! Float
        self.LShoulderRoll = dictionary["LShoulderRoll"] as! Float
        self.LElbowYaw = dictionary["LElbowYaw"] as! Float
        self.LElbowRoll = dictionary["LElbowRoll"] as! Float
        self.RShoulderPitch = dictionary["RShoulderPitch"] as! Float
        self.RShoulderRoll = dictionary["RShoulderRoll"] as! Float
        self.RElbowYaw = dictionary["RElbowYaw"] as! Float
        self.RElbowRoll = dictionary["RElbowRoll"] as! Float
    }
}

extension wb_sensors_torsojointsensors: CustomStringConvertible { 

/** convert to a description string */  
    public var description: String { 

        var descString = "" 

        descString += "HeadYaw= \(HeadYaw) " 
        descString += ", " 
        descString += "HeadPitch= \(HeadPitch) " 
        descString += ", " 
        descString += "LShoulderPitch= \(LShoulderPitch) " 
        descString += ", " 
        descString += "LShoulderRoll= \(LShoulderRoll) " 
        descString += ", " 
        descString += "LElbowYaw= \(LElbowYaw) " 
        descString += ", " 
        descString += "LElbowRoll= \(LElbowRoll) " 
        descString += ", " 
        descString += "RShoulderPitch= \(RShoulderPitch) " 
        descString += ", " 
        descString += "RShoulderRoll= \(RShoulderRoll) " 
        descString += ", " 
        descString += "RElbowYaw= \(RElbowYaw) " 
        descString += ", " 
        descString += "RElbowRoll= \(RElbowRoll) " 
        return descString 
  } 
} 
extension wb_sensors_torsojointsensors: Equatable {}

public func ==(lhs: wb_sensors_torsojointsensors, rhs: wb_sensors_torsojointsensors) -> Bool {
    return lhs.HeadYaw == rhs.HeadYaw
        && lhs.HeadPitch == rhs.HeadPitch
        && lhs.LShoulderPitch == rhs.LShoulderPitch
        && lhs.LShoulderRoll == rhs.LShoulderRoll
        && lhs.LElbowYaw == rhs.LElbowYaw
        && lhs.LElbowRoll == rhs.LElbowRoll
        && lhs.RShoulderPitch == rhs.RShoulderPitch
        && lhs.RShoulderRoll == rhs.RShoulderRoll
        && lhs.RElbowYaw == rhs.RElbowYaw
        && lhs.RElbowRoll == rhs.RElbowRoll
}
