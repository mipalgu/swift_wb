/** 
 * file SENSORSBodySensors.swift 
 * 
 * This file was generated by classgenerator from SENSORS_BodySensors.txt. 
 * DO NOT CHANGE MANUALLY! 
 * 
 * Created by Carl Lusty on 10:34, 19/3/2017 
 * Copyright (c) 2017 Carl Lusty 
 * All rights reserved. 
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 * 
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 * 
 * 2. Redistributions in binary form must reproduce the above 
 *    copyright notice, this list of conditions and the following 
 *    disclaimer in the documentation and/or other materials 
 *    provided with the distribution. 
 * 
 * 3. All advertising materials mentioning features or use of this 
 *    software must display the following acknowledgement: 
 * 
 *    This product includes software developed by Carl Lusty. 
 * 
 * 4. Neither the name of the author nor the names of contributors 
 *    may be used to endorse or promote products derived from this 
 *    software without specific prior written permission. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * ----------------------------------------------------------------------- 
 * This program is free software; you can redistribute it and/or 
 * modify it under the above terms or under the terms of the GNU 
 * General Public License as published by the Free Software Foundation; 
 * either version 2 of the License, or (at your option) any later version. 
 * 
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, see http://www.gnu.org/licenses/ 
 * or write to the Free Software Foundation, Inc., 51 Franklin Street, 
 * Fifth Floor, Boston, MA  02110-1301, USA. 
 */ 

import CGUSimpleWhiteboard

/** 
 * @brief Contains the current values of sensors located in the robots chest (designed for Nao) 
 * Examples 
 * -------- 
 * Get the state of the Chest Button 
 *     SENSORSBodySensors s = SENSORSBodySensors_t.get(); //get from the whiteboard 
 *     bool button_state = s.ChestBoard_Button(); //pull the variable out of the class 
 */ 
extension wb_sensors_bodysensors { 

    public init () { 
        self.InertialSensor_AccX = 0.0 
        self.InertialSensor_AccY = 0.0 
        self.InertialSensor_AccZ = 0.0 
        self.InertialSensor_GyrX = 0.0 
        self.InertialSensor_GyrY = 0.0 
        self.InertialSensor_GyrRef = 0.0 
        self.InertialSensor_AngleX = 0.0 
        self.InertialSensor_AngleY = 0.0 
        self.Battery_Charge = 0.0 
        self.Battery_Current = 0.0 
        self.US = 0.0 
        self.ChestBoard_Button = false 
        self.pad1 = false 
        self.pad2 = 0 
    }

    public init(fromDictionary dictionary: [String: Any]) {
        self.InertialSensor_AccX = dictionary["InertialSensor_AccX"] as! Float
        self.InertialSensor_AccY = dictionary["InertialSensor_AccY"] as! Float
        self.InertialSensor_AccZ = dictionary["InertialSensor_AccZ"] as! Float
        self.InertialSensor_GyrX = dictionary["InertialSensor_GyrX"] as! Float
        self.InertialSensor_GyrY = dictionary["InertialSensor_GyrY"] as! Float
        self.InertialSensor_GyrRef = dictionary["InertialSensor_GyrRef"] as! Float
        self.InertialSensor_AngleX = dictionary["InertialSensor_AngleX"] as! Float
        self.InertialSensor_AngleY = dictionary["InertialSensor_AngleY"] as! Float
        self.Battery_Charge = dictionary["Battery_Charge"] as! Float
        self.Battery_Current = dictionary["Battery_Current"] as! Float
        self.US = dictionary["US"] as! Float
        self.ChestBoard_Button = dictionary["ChestBoard_Button"] as! Bool
        self.pad1 = dictionary["pad1"] as! Bool
        self.pad2 = dictionary["pad2"] as! Int16
    }
}

extension wb_sensors_bodysensors: CustomStringConvertible { 

/** convert to a description string */  
    public var description: String { 

        var descString = "" 

        descString += "InertialSensor_AccX= \(InertialSensor_AccX) " 
        descString += ", " 
        descString += "InertialSensor_AccY= \(InertialSensor_AccY) " 
        descString += ", " 
        descString += "InertialSensor_AccZ= \(InertialSensor_AccZ) " 
        descString += ", " 
        descString += "InertialSensor_GyrX= \(InertialSensor_GyrX) " 
        descString += ", " 
        descString += "InertialSensor_GyrY= \(InertialSensor_GyrY) " 
        descString += ", " 
        descString += "InertialSensor_GyrRef= \(InertialSensor_GyrRef) " 
        descString += ", " 
        descString += "InertialSensor_AngleX= \(InertialSensor_AngleX) " 
        descString += ", " 
        descString += "InertialSensor_AngleY= \(InertialSensor_AngleY) " 
        descString += ", " 
        descString += "Battery_Charge= \(Battery_Charge) " 
        descString += ", " 
        descString += "Battery_Current= \(Battery_Current) " 
        descString += ", " 
        descString += "US= \(US) " 
        descString += ", " 
        descString += "ChestBoard_Button= \(ChestBoard_Button) " 
        descString += ", " 
        descString += "pad1= \(pad1) " 
        descString += ", " 
        descString += "pad2= \(pad2) " 
        return descString 
  } 
} 
extension wb_sensors_bodysensors: Equatable {}

public func ==(lhs: wb_sensors_bodysensors, rhs: wb_sensors_bodysensors) -> Bool {
    return lhs.InertialSensor_AccX == rhs.InertialSensor_AccX
        && lhs.InertialSensor_AccY == rhs.InertialSensor_AccY
        && lhs.InertialSensor_AccZ == rhs.InertialSensor_AccZ
        && lhs.InertialSensor_GyrX == rhs.InertialSensor_GyrX
        && lhs.InertialSensor_GyrY == rhs.InertialSensor_GyrY
        && lhs.InertialSensor_GyrRef == rhs.InertialSensor_GyrRef
        && lhs.InertialSensor_AngleX == rhs.InertialSensor_AngleX
        && lhs.InertialSensor_AngleY == rhs.InertialSensor_AngleY
        && lhs.Battery_Charge == rhs.Battery_Charge
        && lhs.Battery_Current == rhs.Battery_Current
        && lhs.US == rhs.US
        && lhs.ChestBoard_Button == rhs.ChestBoard_Button
        && lhs.pad1 == rhs.pad1
        && lhs.pad2 == rhs.pad2
}
